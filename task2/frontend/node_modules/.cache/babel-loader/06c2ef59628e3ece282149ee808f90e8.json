{"ast":null,"code":"import _regeneratorRuntime from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/learning/istrahti/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/learning/istrahti/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/learning/istrahti/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/learning/istrahti/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/learning/istrahti/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/learning/istrahti/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/learning/istrahti/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/learning/istrahti/frontend/src/views/backend/admin/Create.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button, Card, CardBody, CardHeader, Col, Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport Validation from '../../../containers/Validation';\n\nvar AdminCreate =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AdminCreate, _Component);\n\n  function AdminCreate(props) {\n    var _this;\n\n    _classCallCheck(this, AdminCreate);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminCreate).call(this, props));\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var rules, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                _context.next = 3;\n                return _this.setState({\n                  input: {\n                    name: event.target.elements.name.value,\n                    user_name: event.target.elements.user_name.value,\n                    password: event.target.elements.password.value\n                  },\n                  validation: new Validation({}, [])\n                });\n\n              case 3:\n                rules = {\n                  'name': ['required'],\n                  'user_name': ['required'],\n                  'password': ['password']\n                };\n                _context.prev = 4;\n                _context.next = 7;\n                return _this.setState({\n                  validation: new Validation(_this.state.input, rules)\n                });\n\n              case 7:\n                if (_this.state.validation.success()) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _this.setState({\n                  errors: ''\n                });\n\n                console.log('test');\n                return _context.abrupt(\"return\", 0);\n\n              case 11:\n                _context.next = 13;\n                return axios.post(process.env.REACT_APP_ADMIN_URL + '/manager/create', _this.state.input, {\n                  headers: {\n                    'Authorization': 'Bearer ' + _this.props.token\n                  }\n                });\n\n              case 13:\n                response = _context.sent;\n                if (response.data.status == 'success') _this.props.history.push('/admin/manager');\n                _context.next = 20;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](4);\n\n                _this.setState({\n                  errors: 'somwthing went wrong'\n                });\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[4, 17]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      input: {\n        user_name: '',\n        name: '',\n        password: ''\n      },\n      errors: '',\n      validation: new Validation({}, [])\n    };\n    return _this;\n  }\n\n  _createClass(AdminCreate, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Add admin\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.state.validation.displayError(this.state.errors), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.state.validation.message('name'), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Name\")), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        ref: function ref(node) {\n          return _this2.inputNode = node;\n        },\n        autoComplete: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }))))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.state.validation.message('user_name'), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Username\")), React.createElement(Input, {\n        type: \"text\",\n        name: \"user_name\",\n        ref: function ref(node) {\n          return _this2.inputNode = node;\n        },\n        autoComplete: \"user_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.state.validation.message('passwo'), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Password\")), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        ref: function ref(node) {\n          return _this2.inputNode = node;\n        },\n        autoComplete: \"current-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-asterisk\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }))))), React.createElement(FormGroup, {\n        className: \"form-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Submit\"))))))));\n    }\n  }]);\n\n  return AdminCreate;\n}(Component);\n\nexport { AdminCreate as default };","map":{"version":3,"sources":["/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/learning/istrahti/frontend/src/views/backend/admin/Create.js"],"names":["React","Component","axios","Button","Card","CardBody","CardHeader","Col","Form","FormGroup","Input","InputGroup","InputGroupAddon","InputGroupText","Row","Validation","AdminCreate","props","handleSubmit","event","preventDefault","setState","input","name","target","elements","value","user_name","password","validation","rules","state","success","errors","console","log","post","process","env","REACT_APP_ADMIN_URL","headers","token","response","data","status","history","push","displayError","message","node","inputNode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardHeader,\n    Col,\n    Form,\n    FormGroup,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Row,\n} from 'reactstrap';\nimport Validation from '../../../containers/Validation'\n\nexport default class AdminCreate extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            input:{\n                user_name:'',\n                name:'',\n                password:''  \n            },\n            errors:'',\n            validation:new Validation({}, [])\n        }\n    }\n\n    handleSubmit=async (event)=>{\n        event.preventDefault();\n        await this.setState({\n            input: {\n              name: event.target.elements.name.value,\n              user_name: event.target.elements.user_name.value,\n              password: event.target.elements.password.value,\n            },\n            validation:new Validation({}, [])\n      \n          });\n          var rules = {\n            'name': ['required'],\n            'user_name': ['required'],\n            'password': ['password']\n          }\n          try{\n            await this.setState({validation:new Validation(this.state.input, rules)});\n            if (!this.state.validation.success()) {\n              this.setState({\n                errors:''\n              })\n              console.log('test')\n              return 0;\n            }\n            const response=await axios.post(process.env.REACT_APP_ADMIN_URL+'/manager/create',this.state.input,{\n                headers:{'Authorization':'Bearer '+this.props.token},\n            })\n            if(response.data.status=='success')\n            this.props.history.push('/admin/manager')\n          }\n          catch(errors)\n          {\n            this.setState({\n                errors:'somwthing went wrong'\n            })\n          }\n       \n      \n    }\n\n    render() {\n        return (\n            <div className=\"animated fadeIn\">\n                <Row>\n                    <Col xs=\"12\">\n                        <Card>\n                            <CardHeader>\n                                Add admin\n                             </CardHeader>\n                            <CardBody>\n                                <Form onSubmit={this.handleSubmit}>\n                                {this.state.validation.displayError(this.state.errors)}\n                                <FormGroup>\n                                    {this.state.validation.message('name')}\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText>Name</InputGroupText>\n                                        </InputGroupAddon>\n                                        <Input type=\"text\" name=\"name\" ref={node => (this.inputNode = node)} autoComplete=\"name\" />\n                                        <InputGroupAddon addonType=\"append\">\n                                            <InputGroupText><i className=\"fa fa-user\"></i></InputGroupText>\n                                        </InputGroupAddon>\n                                    </InputGroup>\n                                </FormGroup>\n                                <FormGroup>\n                                {this.state.validation.message('user_name')}\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText>Username</InputGroupText>\n                                        </InputGroupAddon>\n                                        <Input type=\"text\" name=\"user_name\" ref={node => (this.inputNode = node)}  autoComplete=\"user_name\" />\n                                        <InputGroupAddon addonType=\"append\">\n                                            <InputGroupText><i className=\"fa fa-user\"></i></InputGroupText>\n                                        </InputGroupAddon>\n                                    </InputGroup>\n                                </FormGroup>\n                                <FormGroup>\n                                {this.state.validation.message('passwo')}\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText>Password</InputGroupText>\n                                        </InputGroupAddon>\n                                        <Input type=\"password\" name=\"password\" ref={node => (this.inputNode = node)}  autoComplete=\"current-password\" />\n                                        <InputGroupAddon addonType=\"append\">\n                                            <InputGroupText><i className=\"fa fa-asterisk\"></i></InputGroupText>\n                                        </InputGroupAddon>\n                                    </InputGroup>\n                                </FormGroup>\n                                <FormGroup className=\"form-actions\">\n                                    <Button type=\"submit\" size=\"sm\" color=\"primary\">Submit</Button>\n                                </FormGroup>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}