{"ast":null,"code":"import _regeneratorRuntime from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/tasks/task2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/tasks/task2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/tasks/task2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/tasks/task2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/tasks/task2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/tasks/task2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/tasks/task2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/tasks/task2/frontend/src/views/frontend/Cart.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Card, CardBody, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, CardHeader, Col, Row, Table, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Validation from '../../containers/Validation';\nimport CustomModal from '../../containers/Components/Modal';\nvar style = {\n  error: {\n    'color': 'red',\n    'display': 'blocked'\n  },\n  success: {\n    'color': 'green',\n    'display': 'blocked'\n  }\n};\n\nvar Cart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Cart, _Component);\n\n  function Cart(props) {\n    var _this;\n\n    _classCallCheck(this, Cart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cart).call(this, props));\n\n    _this.updateCart =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var inputs, rules, items, objIndex;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                inputs = {\n                  quantity: event.target.elements.quantity.value\n                };\n                rules = {\n                  'quantity': ['number', 'required']\n                };\n                _context.next = 5;\n                return _this.setState({\n                  validation: new Validation(inputs, rules)\n                });\n\n              case 5:\n                if (_this.state.validation.success()) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _this.setState({\n                  errors: ''\n                });\n\n                return _context.abrupt(\"return\", 0);\n\n              case 10:\n                items = _this.props.items.length ? _this.props.items : [];\n                objIndex = items.findIndex(function (obj) {\n                  return obj.id === _this.state.item.id;\n                });\n\n                if (items[objIndex]) {\n                  items[objIndex].quantity = parseInt(inputs.quantity);\n                }\n\n                _context.next = 15;\n                return _this.props.updateCart(items);\n\n              case 15:\n                _this.setState({\n                  updateModal: !_this.state.updateModal,\n                  item: {}\n                });\n\n                _this.calculate();\n\n                return _context.abrupt(\"return\", _this.state.updateModal);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.deleteItem =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(item) {\n        var items, newItems;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                items = _this.props.items;\n                newItems = items.filter(function (row) {\n                  return row.id !== item.id;\n                });\n                _context2.next = 4;\n                return _this.props.updateCart(newItems);\n\n              case 4:\n                _this.calculate();\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.updateToggle = function (item) {\n      _this.setState({\n        updateModal: !_this.state.updateModal,\n        item: item\n      });\n\n      return _this.state.updateModal;\n    };\n\n    _this.completeToggle = function () {\n      _this.setState({\n        completeModal: !_this.state.completeModal\n      });\n\n      return _this.state.completeModal;\n    };\n\n    _this.completeOrder =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(event) {\n        var inputs, rules, items, requests;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                event.preventDefault();\n                inputs = {\n                  address: event.target.elements.address.value,\n                  phone: event.target.elements.phone.value\n                };\n                rules = {\n                  'address': ['required'],\n                  'phone': ['phone', 'required']\n                };\n                _context3.next = 5;\n                return _this.setState({\n                  validation: new Validation(inputs, rules)\n                });\n\n              case 5:\n                if (_this.state.validation.success()) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                _this.setState({\n                  errors: ''\n                });\n\n                return _context3.abrupt(\"return\", 0);\n\n              case 10:\n                items = _this.props.items;\n                requests = [];\n                items.forEach(function (row) {\n                  requests.push({\n                    id: row.id,\n                    quantity: row.quantity\n                  });\n                });\n                console.log(requests);\n                _context3.prev = 14;\n                _context3.next = 17;\n                return axios.post(process.env.REACT_APP_ADMIN_URL + '/cart', {\n                  items: requests,\n                  address: inputs.address,\n                  phone: inputs.phone\n                }, {\n                  headers: {\n                    'Authorization': 'Bearer ' + _this.props.token\n                  }\n                });\n\n              case 17:\n                _this.setState({\n                  totalPrice: 0,\n                  errors: '',\n                  success: 'Order has been sent'\n                });\n\n                _this.completeToggle();\n\n                _this.props.updateCart([]);\n\n                _context3.next = 25;\n                break;\n\n              case 22:\n                _context3.prev = 22;\n                _context3.t0 = _context3[\"catch\"](14);\n                if (_context3.t0.response.status === 400) _this.setState({\n                  errors: _context3.t0.response.data.message,\n                  success: ''\n                });else _this.setState({\n                  errors: 'something went wrong',\n                  success: ''\n                });\n\n              case 25:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[14, 22]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      totalPrice: 0,\n      item: {},\n      validation: new Validation({}, []),\n      errors: '',\n      success: ''\n    };\n    return _this;\n  }\n\n  _createClass(Cart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.calculate();\n    }\n  }, {\n    key: \"calculate\",\n    value: function calculate() {\n      var items = this.props.items;\n      var totalPrice = 0;\n      items.forEach(function (row) {\n        totalPrice += row.price * row.quantity;\n      });\n      this.setState({\n        totalPrice: totalPrice\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var items = this.props.items;\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, this.state.success ? React.createElement(\"p\", {\n        style: style.success,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, this.state.success) : '', React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-align-justify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), \" Cart\"), React.createElement(Col, {\n        xs: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        className: \"btn btn-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"back\")))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Table, {\n        hover: true,\n        bordered: true,\n        striped: true,\n        responsive: true,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Item Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Item Price\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"quantity\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Total Price\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, items.map(function (item) {\n        return React.createElement(\"tr\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, item.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, item.price), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, item.quantity), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, item.price * item.quantity, \" EGP\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"btn btn-success\",\n          onClick: function onClick() {\n            return _this2.updateToggle(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-pencil\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        })), React.createElement(Button, {\n          className: \"btn btn-danger\",\n          onClick: function onClick() {\n            return _this2.deleteItem(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-trash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }))));\n      }), this.state.totalPrice > 0 ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Total price\"), React.createElement(\"td\", {\n        colSpan: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, this.state.totalPrice, \" EGP\"), React.createElement(\"td\", {\n        colSpan: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn btn-success\",\n        onClick: this.completeToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Complete order\"))) : '')))))), React.createElement(CustomModal, {\n        handleSubmit: this.updateCart,\n        buttonLabel: \"update\",\n        toggle: this.updateToggle,\n        modal: this.state.updateModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, this.state.validation.message('quantity'), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Quantity\")), React.createElement(Input, {\n        type: \"text\",\n        name: \"quantity\",\n        defaultValue: this.state.item.quantity,\n        ref: function ref(node) {\n          return _this2.inputNode = node;\n        },\n        autoComplete: \"count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      })))))), React.createElement(CustomModal, {\n        handleSubmit: this.completeOrder,\n        buttonLabel: \"update\",\n        toggle: this.completeToggle,\n        modal: this.state.completeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, this.state.errors ? React.createElement(\"p\", {\n        style: style.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, this.state.errors) : '', this.state.validation.message('address'), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Address\")), React.createElement(Input, {\n        type: \"text\",\n        name: \"address\",\n        ref: function ref(node) {\n          return _this2.inputNode = node;\n        },\n        autoComplete: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }))))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, this.state.validation.message('phone'), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Phone\")), React.createElement(Input, {\n        type: \"text\",\n        name: \"phone\",\n        ref: function ref(node) {\n          return _this2.inputNode = node;\n        },\n        autoComplete: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return Cart;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    items: state.items\n  };\n};\n\nvar mapMethodToProps = function mapMethodToProps(dispatch) {\n  return {\n    updateCart: function updateCart(items) {\n      dispatch({\n        'type': \"ADD_CART\",\n        'items': items\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapMethodToProps)(Cart);","map":{"version":3,"sources":["/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/tasks/task2/frontend/src/views/frontend/Cart.js"],"names":["React","Component","axios","Card","CardBody","FormGroup","Input","InputGroup","InputGroupAddon","InputGroupText","CardHeader","Col","Row","Table","Button","Link","connect","Validation","CustomModal","style","error","success","Cart","props","updateCart","event","preventDefault","inputs","quantity","target","elements","value","rules","setState","validation","state","errors","items","length","objIndex","findIndex","obj","id","item","parseInt","updateModal","calculate","deleteItem","newItems","filter","row","updateToggle","completeToggle","completeModal","completeOrder","address","phone","requests","forEach","push","console","log","post","process","env","REACT_APP_ADMIN_URL","headers","token","totalPrice","response","status","data","message","price","map","name","node","inputNode","mapStateToProps","mapMethodToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {\n    Card, CardBody,\n    FormGroup,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText, CardHeader, Col, Row, Table, Button\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport Validation from '../../containers/Validation'\nimport CustomModal from '../../containers/Components/Modal'\n\nconst style = {\n    error: {\n        'color': 'red',\n        'display': 'blocked',\n    },\n    success: {\n        'color': 'green',\n        'display': 'blocked',\n    }\n}\n\nclass Cart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            totalPrice: 0,\n            item: {},\n            validation: new Validation({}, []),\n            errors: '',\n            success: ''\n        }\n\n    }\n    componentDidMount() {\n        this.calculate()\n    }\n    updateCart = async (event) => {\n        event.preventDefault();\n        var inputs = { quantity: event.target.elements.quantity.value }\n        var rules = {\n            'quantity': ['number', 'required'],\n        }\n        await this.setState({ validation: new Validation(inputs, rules) });\n        if (!this.state.validation.success()) {\n            this.setState({\n                errors: ''\n            })\n            return 0;\n        }\n        else {\n            var items = this.props.items.length ? this.props.items : [];\n            var objIndex = items.findIndex((obj => obj.id === this.state.item.id));\n            if (items[objIndex]) {\n                items[objIndex].quantity = parseInt(inputs.quantity);\n            }\n\n            await this.props.updateCart(items)\n            this.setState({\n                updateModal: !this.state.updateModal,\n                item: {}\n            })\n            this.calculate();\n            return this.state.updateModal\n        }\n\n    }\n    deleteItem = async (item) => {\n        var items = this.props.items;\n        var newItems = items.filter((row) => {\n            return row.id !== item.id\n        })\n        await this.props.updateCart(newItems)\n        this.calculate();\n    }\n\n    updateToggle = (item) => {\n        this.setState({\n            updateModal: !this.state.updateModal,\n            item: item\n        })\n        return this.state.updateModal\n    }\n    completeToggle = () => {\n        this.setState({\n            completeModal: !this.state.completeModal,\n        })\n        return this.state.completeModal\n    }\n    calculate() {\n        let items = this.props.items;\n        let totalPrice = 0;\n        items.forEach(row => {\n            totalPrice += row.price * row.quantity;\n        });\n        this.setState({\n            totalPrice: totalPrice\n        })\n    }\n\n    completeOrder = async (event) => {\n        event.preventDefault();\n        var inputs = {\n            address: event.target.elements.address.value,\n            phone: event.target.elements.phone.value,\n        }\n        var rules = {\n            'address': ['required'],\n            'phone': ['phone','required'],\n        }\n        await this.setState({ validation: new Validation(inputs, rules) });\n        if (!this.state.validation.success()) {\n            this.setState({\n                errors: ''\n            })\n            return 0;\n        }\n        else {\n            let items = this.props.items;\n            var requests = [];\n\n            items.forEach(row => {\n                requests.push({ id: row.id, quantity: row.quantity })\n            });\n            console.log(requests)\n            try {\n                await axios.post(process.env.REACT_APP_ADMIN_URL + '/cart', {\n                    items: requests,\n                    address: inputs.address,\n                    phone: inputs.phone,\n                }, {\n                    headers: { 'Authorization': 'Bearer ' + this.props.token },\n                })\n                this.setState({\n                    totalPrice:0,\n                    errors: '',\n                    success: 'Order has been sent'\n                })\n                this.completeToggle();\n                this.props.updateCart([]);\n            }\n            catch (error) {\n                if (error.response.status === 400)\n                    this.setState({\n                        errors: error.response.data.message,\n                        success: ''\n                    })\n                else\n                    this.setState({\n                        errors: 'something went wrong',\n                        success: ''\n                    })\n\n            }\n        }\n\n\n    }\n\n    render() {\n        let { items } = this.props\n        return (\n            <div className=\"animated fadeIn\">\n\n                <Row>\n                    <Col>\n                        <Card>\n                            <CardHeader>\n                                {this.state.success ? (<p style={style.success}>{this.state.success}</p>) : ''}\n                                <Row>\n                                    <Col xs=\"10\">\n                                        <i className=\"fa fa-align-justify\"></i> Cart\n                                    </Col>\n                                    <Col xs=\"2\">\n                                        <Link to='/' className=\"btn btn-success\">back</Link>\n                                    </Col>\n\n                                </Row>\n                            </CardHeader>\n                            <CardBody>\n                                <Table hover bordered striped responsive size=\"sm\">\n                                    <thead>\n                                        <tr>\n                                            <th>Item Name</th>\n                                            <th>Item Price</th>\n                                            <th>quantity</th>\n                                            <th>Total Price</th>\n                                            <th>Action</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {items.map(item => {\n                                            return (\n                                            <tr key={item.id}>\n                                                <td>{item.name}</td>\n                                                <td>{item.price}</td>\n                                                <td>{item.quantity}</td>\n                                                <td>{item.price * item.quantity} EGP</td>\n                                                <td>\n                                                    <Button className=\"btn btn-success\" onClick={() => this.updateToggle(item)}><i className=\"fa fa-pencil\"></i></Button>\n                                                    <Button className=\"btn btn-danger\" onClick={() => this.deleteItem(item)}><i className=\"fa fa-trash\"></i></Button>\n                                                </td>\n                                            </tr>\n                                            )})}\n                                        {this.state.totalPrice > 0 ? (\n                                            <tr>\n                                                <td colSpan=\"3\">Total price</td>\n                                                <td colSpan=\"1\" >{this.state.totalPrice} EGP</td>\n                                                <td colSpan=\"1\" ><Button className=\"btn btn-success\" onClick={this.completeToggle}>Complete order</Button></td>\n                                            </tr>\n                                        ) : ''}\n\n                                    </tbody>\n                                </Table>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n\n                <CustomModal handleSubmit={this.updateCart} buttonLabel=\"update\" toggle={this.updateToggle} modal={this.state.updateModal}>\n                    <FormGroup>\n                        {this.state.validation.message('quantity')}\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText>Quantity</InputGroupText>\n                            </InputGroupAddon>\n                            <Input type=\"text\" name=\"quantity\" defaultValue={this.state.item.quantity} ref={node => (this.inputNode = node)} autoComplete=\"count\" />\n                            <InputGroupAddon addonType=\"append\">\n                                <InputGroupText><i className=\"fa fa-user\"></i></InputGroupText>\n                            </InputGroupAddon>\n                        </InputGroup>\n                    </FormGroup>\n                </CustomModal>\n\n                <CustomModal handleSubmit={this.completeOrder} buttonLabel=\"update\" toggle={this.completeToggle} modal={this.state.completeModal}>\n                    <FormGroup>\n                        {this.state.errors ? (<p style={style.error}>{this.state.errors}</p>) : ''}\n                        {this.state.validation.message('address')}\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText>Address</InputGroupText>\n                            </InputGroupAddon>\n                            <Input type=\"text\" name=\"address\" ref={node => (this.inputNode = node)} autoComplete=\"address\" />\n                            <InputGroupAddon addonType=\"append\">\n                                <InputGroupText><i className=\"fa fa-user\"></i></InputGroupText>\n                            </InputGroupAddon>\n                        </InputGroup>\n\n                    </FormGroup>\n                    <FormGroup>\n                        {this.state.validation.message('phone')}\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText>Phone</InputGroupText>\n                            </InputGroupAddon>\n                            <Input type=\"text\" name=\"phone\" ref={node => (this.inputNode = node)} autoComplete=\"phone\" />\n                            <InputGroupAddon addonType=\"append\">\n                                <InputGroupText><i className=\"fa fa-user\"></i></InputGroupText>\n                            </InputGroupAddon>\n                        </InputGroup>\n                    </FormGroup>\n                </CustomModal>\n            </div>\n\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return { items: state.items }\n};\nconst mapMethodToProps = (dispatch) => {\n    return {\n        updateCart: (items) => { dispatch({ 'type': \"ADD_CART\", 'items': items }) }\n    }\n}\nexport default connect(mapStateToProps, mapMethodToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}