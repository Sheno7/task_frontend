{"ast":null,"code":"import _regeneratorRuntime from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/learning/istrahti/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/learning/istrahti/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/learning/istrahti/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/learning/istrahti/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/learning/istrahti/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/learning/istrahti/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/learning/istrahti/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/learning/istrahti/frontend/src/views/backend/admin/Create.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button, Card, CardBody, CardHeader, Col, Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport Validation from '../../../containers/Validation';\n\nvar AdminCreate =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AdminCreate, _Component);\n\n  function AdminCreate(props) {\n    var _this;\n\n    _classCallCheck(this, AdminCreate);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminCreate).call(this, props));\n    _this.handleSubmit =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var rules, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.setState({\n                input: {\n                  name: event.target.elements.name.value,\n                  user_name: event.target.elements.user_name.value,\n                  password: event.target.elements.password.value\n                },\n                validation: new Validation({}, [])\n              });\n\n            case 2:\n              rules = {\n                'name': ['required'],\n                'user_name': ['required'],\n                'password': ['password']\n              };\n              _context.prev = 3;\n              _context.next = 6;\n              return _this.setState({\n                validation: new Validation(_this.state.input, rules)\n              });\n\n            case 6:\n              if (_this.state.validation.success()) {\n                _context.next = 9;\n                break;\n              }\n\n              _this.setState({\n                errors: ''\n              });\n\n              return _context.abrupt(\"return\", 0);\n\n            case 9:\n              _context.next = 11;\n              return axios.post(process.env.REACT_APP_ADMIN_URL + '/manager/create', _this.state, {\n                headers: {\n                  'Authorization': 'Bearer ' + _this.props.token\n                }\n              });\n\n            case 11:\n              response = _context.sent;\n              if (response.data.status == 'success') _this.props.history.push('/admin/manager');\n              _context.next = 17;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](3);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 15]]);\n    }));\n    _this.state = {\n      input: {\n        user_name: '',\n        name: '',\n        password: ''\n      },\n      validation: new Validation({}, [])\n    };\n    return _this;\n  }\n\n  _createClass(AdminCreate, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Add admin\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.state.validation.errors, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Name\")), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        ref: function ref(node) {\n          return _this2.inputNode = node;\n        },\n        autoComplete: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Username\")), React.createElement(Input, {\n        type: \"text\",\n        name: \"user_name\",\n        ref: function ref(node) {\n          return _this2.inputNode = node;\n        },\n        autoComplete: \"user_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }))))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Password\")), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        ref: function ref(node) {\n          return _this2.inputNode = node;\n        },\n        autoComplete: \"current-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-asterisk\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }))))), React.createElement(FormGroup, {\n        className: \"form-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Submit\"))))))));\n    }\n  }]);\n\n  return AdminCreate;\n}(Component);\n\nexport { AdminCreate as default };","map":{"version":3,"sources":["/media/shenouda/81422b19-5e63-467f-9a2d-c5ca5ac074ba/work/learning/istrahti/frontend/src/views/backend/admin/Create.js"],"names":["React","Component","axios","Button","Card","CardBody","CardHeader","Col","Form","FormGroup","Input","InputGroup","InputGroupAddon","InputGroupText","Row","Validation","AdminCreate","props","handleSubmit","setState","input","name","event","target","elements","value","user_name","password","validation","rules","state","success","errors","post","process","env","REACT_APP_ADMIN_URL","headers","token","response","data","status","history","push","node","inputNode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardHeader,\n    Col,\n    Form,\n    FormGroup,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Row,\n} from 'reactstrap';\nimport Validation from '../../../containers/Validation'\n\nexport default class AdminCreate extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            input:{\n                user_name:'',\n                name:'',\n                password:''  \n            },\n            validation:new Validation({}, [])\n        }\n    }\n\n    handleSubmit=async ()=>{\n        await this.setState({\n            input: {\n              name: event.target.elements.name.value,\n              user_name: event.target.elements.user_name.value,\n              password: event.target.elements.password.value,\n            },\n            validation:new Validation({}, [])\n      \n          });\n          var rules = {\n            'name': ['required'],\n            'user_name': ['required'],\n            'password': ['password']\n          }\n          try{\n            await this.setState({validation:new Validation(this.state.input, rules)});\n            if (!this.state.validation.success()) {\n              this.setState({\n                errors:''\n              })\n              return 0;\n            }\n            const response=await axios.post(process.env.REACT_APP_ADMIN_URL+'/manager/create',this.state,{\n                headers:{'Authorization':'Bearer '+this.props.token},\n            })\n            if(response.data.status=='success')\n            this.props.history.push('/admin/manager')\n          }\n          catch(errors)\n          {\n\n          }\n       \n      \n    }\n\n    render() {\n        return (\n            <div className=\"animated fadeIn\">\n                <Row>\n                    <Col xs=\"12\">\n                        <Card>\n                            <CardHeader>\n                                Add admin\n                             </CardHeader>\n                            <CardBody>\n                                <Form onSubmit={this.handleSubmit}>\n                                <FormGroup>\n                                    {this.state.validation.errors}\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText>Name</InputGroupText>\n                                        </InputGroupAddon>\n                                        <Input type=\"text\" name=\"name\" ref={node => (this.inputNode = node)} autoComplete=\"name\" />\n                                        <InputGroupAddon addonType=\"append\">\n                                            <InputGroupText><i className=\"fa fa-user\"></i></InputGroupText>\n                                        </InputGroupAddon>\n                                    </InputGroup>\n                                </FormGroup>\n                                <FormGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText>Username</InputGroupText>\n                                        </InputGroupAddon>\n                                        <Input type=\"text\" name=\"user_name\" ref={node => (this.inputNode = node)}  autoComplete=\"user_name\" />\n                                        <InputGroupAddon addonType=\"append\">\n                                            <InputGroupText><i className=\"fa fa-user\"></i></InputGroupText>\n                                        </InputGroupAddon>\n                                    </InputGroup>\n                                </FormGroup>\n                                <FormGroup>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText>Password</InputGroupText>\n                                        </InputGroupAddon>\n                                        <Input type=\"password\" name=\"password\" ref={node => (this.inputNode = node)}  autoComplete=\"current-password\" />\n                                        <InputGroupAddon addonType=\"append\">\n                                            <InputGroupText><i className=\"fa fa-asterisk\"></i></InputGroupText>\n                                        </InputGroupAddon>\n                                    </InputGroup>\n                                </FormGroup>\n                                <FormGroup className=\"form-actions\">\n                                    <Button type=\"submit\" size=\"sm\" color=\"primary\">Submit</Button>\n                                </FormGroup>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}